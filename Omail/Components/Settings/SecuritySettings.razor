@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject IToastService ToastService

<div class="space-y-8">
    <!-- Password Settings -->
    <div>
        <h2 class="text-lg font-medium text-omail-900 dark:text-white mb-4">Password Settings</h2>
        
        <div class="bg-white dark:bg-omail-800/50 rounded-lg shadow-sm overflow-hidden">
            <div class="p-5 border-b border-omail-100 dark:border-omail-700">
                <h3 class="text-sm font-medium text-omail-800 dark:text-white">Change Password</h3>
                <p class="text-sm text-omail-500 dark:text-omail-400 mt-1">
                    It's a good practice to use a strong password and change it periodically.
                </p>
            </div>
            
            <div class="p-5 space-y-4">
                <div>
                    <label for="current-password" class="block text-sm font-medium text-omail-700 dark:text-omail-300 mb-1">
                        Current Password
                    </label>
                    <div class="relative">
                        <input type="password" id="current-password" @bind="currentPassword" class="mt-1 w-full rounded-md border border-omail-300 dark:border-omail-700 py-2 px-3 bg-white dark:bg-omail-800/30 text-omail-900 dark:text-white shadow-sm focus:border-omail-500 focus:ring focus:ring-omail-500 focus:ring-opacity-50 pr-10" />
                        <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center text-omail-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                </div>
                
                <div>
                    <label for="new-password" class="block text-sm font-medium text-omail-700 dark:text-omail-300 mb-1">
                        New Password
                    </label>
                    <div class="relative">
                        <input type="password" id="new-password" @bind="newPassword" class="mt-1 w-full rounded-md border border-omail-300 dark:border-omail-700 py-2 px-3 bg-white dark:bg-omail-800/30 text-omail-900 dark:text-white shadow-sm focus:border-omail-500 focus:ring focus:ring-omail-500 focus:ring-opacity-50 pr-10" />
                        <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center text-omail-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                    
                    <!-- Password Strength Meter -->
                    @if (!string.IsNullOrEmpty(newPassword))
                    {
                        <div class="mt-2">
                            <div class="flex items-center justify-between mb-1">
                                <label class="text-xs text-omail-700 dark:text-omail-300">Password Strength</label>
                                <span class="text-xs font-medium @GetPasswordStrengthColor()">@passwordStrength</span>
                            </div>
                            <div class="w-full bg-gray-200 dark:bg-omail-700 rounded-full h-1.5">
                                <div class="@GetPasswordStrengthBgColor() h-1.5 rounded-full" style="width: @(GetPasswordStrength() * 25)%"></div>
                            </div>
                        </div>
                    }
                    
                    <div class="text-xs text-omail-500 dark:text-omail-400 mt-2">
                        Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.
                    </div>
                </div>
                
                <div>
                    <label for="confirm-password" class="block text-sm font-medium text-omail-700 dark:text-omail-300 mb-1">
                        Confirm New Password
                    </label>
                    <div class="relative">
                        <input type="password" id="confirm-password" @bind="confirmPassword" class="mt-1 w-full rounded-md border border-omail-300 dark:border-omail-700 py-2 px-3 bg-white dark:bg-omail-800/30 text-omail-900 dark:text-white shadow-sm focus:border-omail-500 focus:ring focus:ring-omail-500 focus:ring-opacity-50 pr-10" />
                        <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center text-omail-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                </div>
                
                <div class="pt-2 flex justify-end">
                    <button @onclick="ChangePassword" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-omail-600 hover:bg-omail-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-omail-500 transition-colors">
                        Change Password
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Two-Factor Authentication -->
    <div class="pt-6 border-t border-omail-100 dark:border-omail-700">
        <div class="flex items-center justify-between mb-4">
            <h2 class="text-lg font-medium text-omail-900 dark:text-white">Two-Factor Authentication</h2>
            <div class="relative inline-block w-12 align-middle select-none">
                <input type="checkbox" name="tfa" id="tfa" class="toggle-checkbox" @onchange="ToggleTwoFactor" />
                <label for="tfa" class="toggle-label"></label>
            </div>
        </div>
        
        @if (twoFactorEnabled)
        {
            <div class="bg-white dark:bg-omail-800/50 rounded-lg shadow-sm overflow-hidden mt-4">
                <div class="p-5">
                    <div class="flex items-center mb-4">
                        <div class="w-16 h-16 bg-omail-100 dark:bg-omail-700 rounded-lg flex items-center justify-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-omail-600 dark:text-omail-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <h3 class="text-base font-medium text-omail-800 dark:text-white">Two-Factor Authentication is Enabled</h3>
                            <p class="text-sm text-omail-500 dark:text-omail-400 mt-1">
                                Your account is protected with an additional layer of security.
                            </p>
                        </div>
                    </div>
                    
                    <div class="bg-omail-50 dark:bg-omail-700/50 rounded-lg p-4 mb-4">
                        <h4 class="font-medium text-omail-800 dark:text-white text-sm mb-2">Recovery Codes</h4>
                        <p class="text-sm text-omail-600 dark:text-omail-300 mb-3">
                            Save these recovery codes in a secure location. They can be used to recover access to your account if you lose your two-factor authentication device.
                        </p>
                        <div class="grid grid-cols-2 gap-2">
                            @foreach (var code4 in recoveryCodes)
                            {
                                <div class="bg-white dark:bg-omail-800 rounded p-2 text-sm text-omail-800 dark:text-omail-200 font-mono">
                                    @code4
                                </div>
                            }
                        </div>
                    </div>
                    
                    <div class="flex justify-between">
                        <button @onclick="RegenerateCodes" class="inline-flex items-center px-4 py-2 border border-omail-300 dark:border-omail-600 text-sm font-medium rounded-md text-omail-700 dark:text-omail-200 bg-white dark:bg-omail-800 hover:bg-omail-50 dark:hover:bg-omail-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-omail-500 transition-colors">
                            Regenerate Codes
                        </button>
                        <button @onclick="DownloadRecoveryCodes" class="inline-flex items-center px-4 py-2 border border-omail-300 dark:border-omail-600 text-sm font-medium rounded-md text-omail-700 dark:text-omail-200 bg-white dark:bg-omail-800 hover:bg-omail-50 dark:hover:bg-omail-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-omail-500 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                            </svg>
                            Download Codes
                        </button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="bg-white dark:bg-omail-800/50 rounded-lg shadow-sm overflow-hidden">
                <div class="p-5">
                    <p class="text-sm text-omail-600 dark:text-omail-300 mb-4">
                        Two-factor authentication adds an extra layer of security to your account by requiring more than just a password to log in.
                    </p>
                    
                    <button @onclick="SetupTwoFactor" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-omail-600 hover:bg-omail-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-omail-500 transition-colors">
                        Set Up Two-Factor Authentication
                    </button>
                </div>
            </div>
        }
    </div>
    
    <!-- Login Activity -->
    <div class="pt-6 border-t border-omail-100 dark:border-omail-700">
        <h2 class="text-lg font-medium text-omail-900 dark:text-white mb-4">Login Activity</h2>
        
        <div class="bg-white dark:bg-omail-800/50 rounded-lg shadow-sm overflow-hidden">
            <div class="px-4 py-3 border-b border-omail-100 dark:border-omail-700 flex justify-between items-center">
                <h3 class="font-medium text-omail-800 dark:text-white">Recent Login Activity</h3>
                <button class="text-sm text-omail-600 dark:text-omail-400 hover:text-omail-800 dark:hover:text-white">
                    View All
                </button>
            </div>
            
            <div class="divide-y divide-omail-100 dark:divide-omail-700">
                <div class="px-4 py-3">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm font-medium text-omail-800 dark:text-white">
                                Current Session
                                <span class="ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/40 dark:text-green-400">
                                    Active
                                </span>
                            </p>
                            <p class="text-xs text-omail-500 dark:text-omail-400 mt-1">
                                Windows 11 • Chrome • New York, USA
                            </p>
                            <p class="text-xs text-omail-500 dark:text-omail-400">
                                IP: 192.168.1.1 • Now
                            </p>
                        </div>
                        <button class="text-xs text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300">
                            Sign Out
                        </button>
                    </div>
                </div>
                
                <div class="px-4 py-3">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm font-medium text-omail-800 dark:text-white">
                                iOS 15 • Safari
                            </p>
                            <p class="text-xs text-omail-500 dark:text-omail-400 mt-1">
                                Boston, USA
                            </p>
                            <p class="text-xs text-omail-500 dark:text-omail-400">
                                IP: 192.168.1.2 • Yesterday, 15:42
                            </p>
                        </div>
                        <button class="text-xs text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300">
                            Sign Out
                        </button>
                    </div>
                </div>
                
                <div class="px-4 py-3">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm font-medium text-omail-800 dark:text-white">
                                MacOS • Firefox
                            </p>
                            <p class="text-xs text-omail-500 dark:text-omail-400 mt-1">
                                Chicago, USA
                            </p>
                            <p class="text-xs text-omail-500 dark:text-omail-400">
                                IP: 192.168.1.3 • 3 days ago
                            </p>
                        </div>
                        <button class="text-xs text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300">
                            Sign Out
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="px-4 py-3 bg-omail-50 dark:bg-omail-700/50 border-t border-omail-100 dark:border-omail-700 flex justify-end">
                <button @onclick="SignOutAllDevices" class="inline-flex items-center px-4 py-2 border border-red-300 dark:border-red-600 text-sm font-medium rounded-md text-red-700 dark:text-red-300 bg-white dark:bg-omail-800 hover:bg-red-50 dark:hover:bg-red-900/30 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                    Sign Out All Devices
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private string currentPassword = "";
    private string newPassword = "";
    private string confirmPassword = "";
    private string passwordStrength = "Weak";
    private bool twoFactorEnabled = false;
    
    private List<string> recoveryCodes = new List<string> {
        "ABCD-EFGH-IJKL", "MNOP-QRST-UVWX",
        "1234-5678-9ABC", "DEFG-HIJK-LMNO",
        "PQRS-TUVW-XYZ1", "2345-6789-ABCD"
    };
    
    private async Task TogglePasswordVisibility(string elementId)
    {
        await JSRuntime.InvokeVoidAsync("togglePasswordVisibility", elementId);
    }
    
    private int GetPasswordStrength()
    {
        if (string.IsNullOrEmpty(newPassword))
            return 0;
            
        int score = 0;
        
        if (newPassword.Length >= 8)
            score += 1;
            
        if (newPassword.Any(char.IsUpper) && newPassword.Any(char.IsLower))
            score += 1;
            
        if (newPassword.Any(char.IsDigit))
            score += 1;
            
        if (newPassword.Any(c => !char.IsLetterOrDigit(c)))
            score += 1;
            
        switch (score)
        {
            case 1:
                passwordStrength = "Weak";
                break;
            case 2:
                passwordStrength = "Fair";
                break;
            case 3:
                passwordStrength = "Good";
                break;
            case 4:
                passwordStrength = "Strong";
                break;
            default:
                passwordStrength = "Weak";
                break;
        }
        
        return score;
    }
    
    private string GetPasswordStrengthColor()
    {
        return passwordStrength switch
        {
            "Weak" => "text-red-600 dark:text-red-400",
            "Fair" => "text-amber-600 dark:text-amber-400",
            "Good" => "text-blue-600 dark:text-blue-400",
            "Strong" => "text-green-600 dark:text-green-400",
            _ => "text-red-600 dark:text-red-400"
        };
    }
    
    private string GetPasswordStrengthBgColor()
    {
        return passwordStrength switch
        {
            "Weak" => "bg-red-600",
            "Fair" => "bg-amber-600",
            "Good" => "bg-blue-600",
            "Strong" => "bg-green-600",
            _ => "bg-red-600"
        };
    }
    
    private async Task ChangePassword()
    {
        if (string.IsNullOrEmpty(currentPassword))
        {
            ToastService.ShowError("Please enter your current password.");
            return;
        }
        
        if (string.IsNullOrEmpty(newPassword))
        {
            ToastService.ShowError("Please enter a new password.");
            return;
        }
        
        if (newPassword != confirmPassword)
        {
            ToastService.ShowError("New passwords don't match.");
            return;
        }
        
        // In a real app, you would call an API to change the password
        await Task.Delay(1000); // Simulating API call
        
        // Reset form
        currentPassword = "";
        newPassword = "";
        confirmPassword = "";
        
        ToastService.ShowSuccess("Password changed successfully.");
    }
    
    private void ToggleTwoFactor(ChangeEventArgs e)
    {
        twoFactorEnabled = (bool)e.Value;
    }
    
    private void SetupTwoFactor()
    {
        twoFactorEnabled = true;
    }
    
    private void RegenerateCodes()
    {
        // In a real app, you would call an API to regenerate the codes
        // For demo, we'll just shuffle the existing ones
        Random rng = new Random();
        recoveryCodes = recoveryCodes.OrderBy(x => rng.Next()).ToList();
        
        ToastService.ShowSuccess("Recovery codes regenerated successfully.");
    }
    
    private async Task DownloadRecoveryCodes()
    {
        var codes = string.Join("\n", recoveryCodes);
        var fileName = "omail-recovery-codes.txt";
        
        await JSRuntime.InvokeVoidAsync("saveAsFile", fileName, codes);
        
        ToastService.ShowSuccess("Recovery codes downloaded successfully.");
    }
    
    private void SignOutAllDevices()
    {
        // In a real app, you would call an API to sign out all devices
        ToastService.ShowSuccess("Signed out of all devices.");
    }
}
